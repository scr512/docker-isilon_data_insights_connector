[isi_data_insights_d]
# Parameters specified on the command line will supersede the parameters
# in this section.
pid_file: ./isi_data_insights_d.pid
log_file: ./isi_data_insights_d.log
# default log_level is INFO
# log_level: DEBUG
stats_processor: influxdb_plugin
# Use "auth" as the 4th arg in order to be prompted for the
# InfluxDB username and password stats_processor_args, example:
# localhost 8086 isi_data_insights auth
stats_processor_args: <myinfluxdb> 8086 isi_data_insights

# clusters in this section are queried for all stat groups
# clusters: [username1:password1@]<ip-or-host-address1>[:True|False]
#	[[username2:password2]@<ip-or-host-address2>[:True|False]]
#	[[username3:password3]@<ip-or-host-address3>[:True|False]]
#	...
# If you don't specify the username and password then you will be prompted
# for them when the daemon starts up.
# Use the optional True or False on the end to specify whether the cluster's
# SSL certificate should be verified. If it is omitted then the default is
# False (i.e. don't verify SSL cert).
clusters: myusername:mypass@10.25.69.74:False myusername:mypass@10.245.108.21
# clusters: 10.25.69.74

# Specifies the active list of stat groups to query, each stat group name
# specified here should have a corresponding section in the config file.
active_stat_groups: cluster_cpu_stats
    cluster_network_traffic_stats
    cluster_cpu_vs_protostats
    cluster_cpu_vs_job_engine_activity_stats
    cluster_client_activity_stats

# The min_update_interval_override param provides ability to override the
# minimum interval that the daemon will query for a set of stats. The purpose
# of the minimum interval, which defaults to 30 seconds, is to prevent
# the daemon's queries from putting too much stress on the cluster.
# The default value is 30 seconds.
# min_update_interval_override = 15

# This set of stats is used by the Cluster CPU Graph.
[cluster_cpu_stats]
# The clusters (optional) param defines a list of clusters specific to this
# group.
# clusters: 10.25.69.74 10.25.69.75
# update interval is in seconds or use *<number> to base the update interval
# off each stat's collection interval (i.e. *2 == 2 times the collection
# interval, *1 == * == 1 times the collection invterval of each stat)
update_interval: *
stats: cluster.cpu.sys.avg
    cluster.cpu.user.avg
    cluster.cpu.idle.avg
    cluster.cpu.intr.avg

# This set of stats is used by the Cluster Network Traffic Packets Graph and
# the Cluster Network Errors Graph.
[cluster_network_traffic_stats]
update_interval: *
stats: cluster.net.ext.bytes.in.rate
    cluster.net.ext.bytes.out.rate
    cluster.net.ext.packets.in.rate
    cluster.net.ext.packets.out.rate
    cluster.net.ext.errors.in.rate
    cluster.net.ext.errors.out.rate

# This set of stats is used by the Cluster Client Activity Graph.
[cluster_client_activity_stats]
update_interval: *
stats: node.clientstats.active.ftp
    node.clientstats.active.hdfs
    node.clientstats.active.http
    node.clientstats.active.jobd
    node.clientstats.active.lsass_out
    node.clientstats.active.nfs3
    node.clientstats.active.nfs4
    node.clientstats.active.nlm
    node.clientstats.active.papi
    node.clientstats.active.siq
    node.clientstats.active.smb1
    node.clientstats.active.smb2

# This set of stats is used by the Cluster CPU vs Protocol Operations Graph.
[cluster_cpu_vs_protostats]
update_interval: *
stats: cluster.cpu.idle.avg
    cluster.protostats.nfs3.total
    cluster.protostats.nfs4.total
    cluster.protostats.nlm.total
    cluster.protostats.smb1.total
    cluster.protostats.smb2.total
    cluster.protostats.ftp.total
    cluster.protostats.hdfs.total
    cluster.protostats.http.total
    cluster.protostats.papi.total
    cluster.protostats.siq.total
    cluster.protostats.jobd.total
    cluster.protostats.lsass_in.total
    cluster.protostats.lsass_out.total

# This set of stats is used by the Job Engine Activity Graph.
[cluster_cpu_vs_job_engine_activity_stats]
update_interval: *
stats: cluster.cpu.idle.avg node.je.num_workers
